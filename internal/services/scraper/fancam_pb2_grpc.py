# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from internal.proto.fancam import fancam_pb2 as internal_dot_proto_dot_fancam_dot_fancam__pb2


class FancamStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetFancam = channel.unary_unary(
                '/Fancam/GetFancam',
                request_serializer=internal_dot_proto_dot_fancam_dot_fancam__pb2.GetFancamRequest.SerializeToString,
                response_deserializer=internal_dot_proto_dot_fancam_dot_fancam__pb2.FancamObject.FromString,
                )
        self.GetFancams = channel.unary_unary(
                '/Fancam/GetFancams',
                request_serializer=internal_dot_proto_dot_fancam_dot_fancam__pb2.GetFancamsRequest.SerializeToString,
                response_deserializer=internal_dot_proto_dot_fancam_dot_fancam__pb2.FancamList.FromString,
                )
        self.GetFancamsLatest = channel.unary_unary(
                '/Fancam/GetFancamsLatest',
                request_serializer=internal_dot_proto_dot_fancam_dot_fancam__pb2.GetFancamsLatestRequest.SerializeToString,
                response_deserializer=internal_dot_proto_dot_fancam_dot_fancam__pb2.FancamList.FromString,
                )
        self.CreateFancams = channel.unary_unary(
                '/Fancam/CreateFancams',
                request_serializer=internal_dot_proto_dot_fancam_dot_fancam__pb2.FancamList.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.DeleteFancam = channel.unary_unary(
                '/Fancam/DeleteFancam',
                request_serializer=internal_dot_proto_dot_fancam_dot_fancam__pb2.DeleteFancamRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class FancamServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetFancam(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFancams(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFancamsLatest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateFancams(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteFancam(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_FancamServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetFancam': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFancam,
                    request_deserializer=internal_dot_proto_dot_fancam_dot_fancam__pb2.GetFancamRequest.FromString,
                    response_serializer=internal_dot_proto_dot_fancam_dot_fancam__pb2.FancamObject.SerializeToString,
            ),
            'GetFancams': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFancams,
                    request_deserializer=internal_dot_proto_dot_fancam_dot_fancam__pb2.GetFancamsRequest.FromString,
                    response_serializer=internal_dot_proto_dot_fancam_dot_fancam__pb2.FancamList.SerializeToString,
            ),
            'GetFancamsLatest': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFancamsLatest,
                    request_deserializer=internal_dot_proto_dot_fancam_dot_fancam__pb2.GetFancamsLatestRequest.FromString,
                    response_serializer=internal_dot_proto_dot_fancam_dot_fancam__pb2.FancamList.SerializeToString,
            ),
            'CreateFancams': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateFancams,
                    request_deserializer=internal_dot_proto_dot_fancam_dot_fancam__pb2.FancamList.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'DeleteFancam': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteFancam,
                    request_deserializer=internal_dot_proto_dot_fancam_dot_fancam__pb2.DeleteFancamRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Fancam', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Fancam(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetFancam(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Fancam/GetFancam',
            internal_dot_proto_dot_fancam_dot_fancam__pb2.GetFancamRequest.SerializeToString,
            internal_dot_proto_dot_fancam_dot_fancam__pb2.FancamObject.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFancams(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Fancam/GetFancams',
            internal_dot_proto_dot_fancam_dot_fancam__pb2.GetFancamsRequest.SerializeToString,
            internal_dot_proto_dot_fancam_dot_fancam__pb2.FancamList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFancamsLatest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Fancam/GetFancamsLatest',
            internal_dot_proto_dot_fancam_dot_fancam__pb2.GetFancamsLatestRequest.SerializeToString,
            internal_dot_proto_dot_fancam_dot_fancam__pb2.FancamList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateFancams(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Fancam/CreateFancams',
            internal_dot_proto_dot_fancam_dot_fancam__pb2.FancamList.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteFancam(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Fancam/DeleteFancam',
            internal_dot_proto_dot_fancam_dot_fancam__pb2.DeleteFancamRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
